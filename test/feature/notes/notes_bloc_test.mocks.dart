// Mocks generated by Mockito 5.0.9 from annotations
// in secure_notes/test/feature/notes/notes_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:secure_notes/feature/notes/notes_model.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeNoteModel extends _i1.Fake implements _i2.NoteModel {}

/// A class which mocks [NotesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotesRepository extends _i1.Mock implements _i2.NotesRepository {
  MockNotesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i2.NoteMetaModel>> watchNotesMeta() =>
      (super.noSuchMethod(Invocation.method(#watchNotesMeta, []),
              returnValue: Stream<List<_i2.NoteMetaModel>>.empty())
          as _i3.Stream<List<_i2.NoteMetaModel>>);
  @override
  _i3.Future<_i2.NoteModel> getNote(String? id) =>
      (super.noSuchMethod(Invocation.method(#getNote, [id]),
              returnValue: Future<_i2.NoteModel>.value(_FakeNoteModel()))
          as _i3.Future<_i2.NoteModel>);
  @override
  _i3.Future<void> saveNote(_i2.NoteModel? note) =>
      (super.noSuchMethod(Invocation.method(#saveNote, [note]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}
